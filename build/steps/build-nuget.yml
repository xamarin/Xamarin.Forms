steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download build artifact win_build'
    inputs:
      artifactName: 'win_build'
      downloadPath: '$(Build.ArtifactsDirectory)'


  - task: CopyFiles@2
    displayName: 'Copy Files to: $(System.DefaultWorkingDirectory)'
    inputs:
      SourceFolder: '$(Build.ArtifactsDirectory)/win_build'
      TargetFolder: '$(System.DefaultWorkingDirectory)'


  - task: PowerShell@1
    displayName: 'Generate docs from docs repo'
    inputs:
      scriptName: 'build/scripts/generate-docs.ps1'
      arguments: '"$(Build.SourceBranch)" "$(GitHub.Token)"'
      workingFolder: '$(System.DefaultWorkingDirectory)/build/scripts'
      failOnStandardError: false


  - powershell: |
       $formsNugetVersion = $env:major + "." + $env:minor + "." + $env:patch + "." + $env:buildversion
       if($env:SUFFIX)
       {
          $formsNugetVersion = $formsNugetVersion +"-"+$env:SUFFIX
       }
       Write-Host("FormsVersion = $formsNugetVersion")
       Write-Host("##{0}[task.setvariable variable=XamarinFormsPackageVersion]{1}" -f "vso",$formsNugetVersion.ToString() )
    failOnStderr: true
    displayName: 'Set Nuget version'

  - task: NuGetCommand@2
    displayName: 'Make NuGet Package'
    inputs:
      command: pack
      feedsToUse: config
      packagesToPack: '.nuspec/*.nuspec'
      packDestination: '$(Build.ArtifactStagingDirectory)/nuget/debug'
      versioningScheme: byEnvVar
      versionEnvVar: XamarinFormsPackageVersion
      buildProperties: 'IdAppend=$(FormsIdAppend)'


  - task: NuGetCommand@2
    displayName: 'NuGet push'
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/nuget/debug/*.nupkg'
      publishVstsFeed: '13fa23d7-5f2f-47f1-a87c-45a9f173dd74'
      allowPackageConflicts: true


  - powershell: |
       $buildConfiguration = "Release"
       $formsNugetVersion = "" + $env:XAMARINFORMSPACKAGEVERSION

       Write-Host("Update nuspecs")
       Get-ChildItem './.nuspec/*.nuspec' -Recurse | Foreach-Object {
            (Get-Content $_) | Foreach-Object  {
                $_ -replace '\$version\$', $formsNugetVersion `
                   -replace '\$Configuration\$', $buildConfiguration `
                   -replace '\$IdAppend\$', ''
           } | Set-Content $_
       }
    failOnStderr: true
    displayName: 'Update nuspecs'
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'],'refs/tags/')))

  - task: NuGetCommand@2
    displayName: 'Make NuGet Package Release'
    inputs:
      command: pack
      feedsToUse: config
      packagesToPack: '.nuspec/*.nuspec'
      packDestination: '$(Build.ArtifactStagingDirectory)/nuget/release'
      versioningScheme: byEnvVar
      versionEnvVar: XamarinFormsPackageVersion
      buildProperties: 'IdAppend=$(FormsIdAppend)'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'],'refs/tags/'))

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: nuget'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/nuget'
      ArtifactName: nuget