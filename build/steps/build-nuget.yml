parameters:
  nugetForDebug: 'true'
  nugetForRelease: 'true'
  publishArtifacts: 'true'
  binariesArtifact: 'win_build'
  artifact: 'nuget'
  artifactsTargetFolder: '$(build.artifactstagingdirectory)'


steps:
  - checkout: self
    clean: true

  - task: DownloadBuildArtifacts@0
    displayName: 'Download build artifact ${{ parameters.PackPlatform.binariesArtifact }}'
    inputs:
      artifactName: ${{ parameters.PackPlatform.binariesArtifact }}
      downloadPath: '$(Build.ArtifactsDirectory)'


  - task: CopyFiles@2
    displayName: 'Copy Files to: $(System.DefaultWorkingDirectory)'
    inputs:
      SourceFolder: '$(Build.ArtifactsDirectory)/${{ parameters.PackPlatform.binariesArtifact }}'
      TargetFolder: '$(System.DefaultWorkingDirectory)'

  - task: CopyFiles@2
    displayName: 'Copy SignList.xml Files'
    inputs:
      Contents: build/SignList.xml
      TargetFolder: ${{ parameters.artifactsTargetFolder}}/nuget
      flattenFolders: true

  - task: PowerShell@1
    displayName: 'Generate docs from docs repo'
    inputs:
      scriptName: 'build/scripts/generate-docs.ps1'
      arguments: '"$(Build.SourceBranch)" "$(github--pat--xamarinreleasemanager)"'
      workingFolder: '$(System.DefaultWorkingDirectory)/build/scripts'

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet: $(NUGET_VERSION)'
    inputs:
      versionSpec: $(NUGET_VERSION)

  - task: NuGetCommand@2
    displayName: 'Make NuGet Package'
    inputs:
      command: pack
      feedsToUse: config
      packagesToPack: '.nuspec/*.nuspec'
      packDestination: '${{ parameters.artifactsTargetFolder}}/nuget/$(BuildConfiguration)'
      versioningScheme: byEnvVar
      versionEnvVar: nugetPackageVersion
      configuration: $(BuildConfiguration)

  - task: NuGetCommand@2
    displayName: 'Make NuGet Package Release'
    inputs:
      command: pack
      feedsToUse: config
      packagesToPack: '.nuspec/*.nuspec'
      packDestination: '${{ parameters.artifactsTargetFolder}}/nuget/release'
      versioningScheme: byEnvVar
      versionEnvVar: nugetPackageVersion
      configuration: Release
    condition: and(succeeded(), or(eq(${{ parameters.nugetForRelease }}, 'true') , or(eq(variables['Sign'], 'true'), or(eq(variables['BuildConfiguration'], 'Release'), eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'],'refs/tags/')))))

  - task: CopyFiles@2
    displayName: 'Copy SignList.xml Files'
    inputs:
      Contents: build/SignList.xml
      TargetFolder: '${{ parameters.artifactsTargetFolder}}/nuget/$(BuildConfiguration)'
      flattenFolders: true

  - ${{ if eq(parameters.publishArtifacts, 'true') }}:
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: nuget'
      inputs:
        PathtoPublish: '${{ parameters.artifactsTargetFolder}}/nuget'
        ArtifactName: ${{ parameters.artifact }}
