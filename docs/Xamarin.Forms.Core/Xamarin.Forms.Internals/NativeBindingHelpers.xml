<Type Name="NativeBindingHelpers" FullName="Xamarin.Forms.Internals.NativeBindingHelpers">
  <TypeSignature Language="C#" Value="public static class NativeBindingHelpers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NativeBindingHelpers extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>For internal use by the Xamarin.Forms platform.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SetBinding&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetBinding&lt;TNativeView&gt; (TNativeView target, Xamarin.Forms.BindableProperty targetProperty, Xamarin.Forms.BindingBase binding) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBinding&lt;class TNativeView&gt;(!!TNativeView target, class Xamarin.Forms.BindableProperty targetProperty, class Xamarin.Forms.BindingBase binding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="targetProperty" Type="Xamarin.Forms.BindableProperty" />
        <Parameter Name="binding" Type="Xamarin.Forms.BindingBase" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">To be added.</typeparam>
        <param name="target">To be added.</param>
        <param name="targetProperty">To be added.</param>
        <param name="binding">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBinding&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetBinding&lt;TNativeView&gt; (TNativeView target, string targetProperty, Xamarin.Forms.BindingBase bindingBase, System.ComponentModel.INotifyPropertyChanged propertyChanged) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBinding&lt;class TNativeView&gt;(!!TNativeView target, string targetProperty, class Xamarin.Forms.BindingBase bindingBase, class System.ComponentModel.INotifyPropertyChanged propertyChanged) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="targetProperty" Type="System.String" />
        <Parameter Name="bindingBase" Type="Xamarin.Forms.BindingBase" />
        <Parameter Name="propertyChanged" Type="System.ComponentModel.INotifyPropertyChanged" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">To be added.</typeparam>
        <param name="target">To be added.</param>
        <param name="targetProperty">To be added.</param>
        <param name="bindingBase">To be added.</param>
        <param name="propertyChanged">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBinding&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetBinding&lt;TNativeView&gt; (TNativeView target, string targetProperty, Xamarin.Forms.BindingBase bindingBase, string updateSourceEventName = null) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBinding&lt;class TNativeView&gt;(!!TNativeView target, string targetProperty, class Xamarin.Forms.BindingBase bindingBase, string updateSourceEventName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="targetProperty" Type="System.String" />
        <Parameter Name="bindingBase" Type="Xamarin.Forms.BindingBase" />
        <Parameter Name="updateSourceEventName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">To be added.</typeparam>
        <param name="target">To be added.</param>
        <param name="targetProperty">To be added.</param>
        <param name="bindingBase">To be added.</param>
        <param name="updateSourceEventName">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBindingContext&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetBindingContext&lt;TNativeView&gt; (TNativeView target, object bindingContext, Func&lt;TNativeView,System.Collections.Generic.IEnumerable&lt;TNativeView&gt;&gt; getChild = null) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBindingContext&lt;class TNativeView&gt;(!!TNativeView target, object bindingContext, class System.Func`2&lt;!!TNativeView, class System.Collections.Generic.IEnumerable`1&lt;!!TNativeView&gt;&gt; getChild) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="bindingContext" Type="System.Object" />
        <Parameter Name="getChild" Type="System.Func&lt;TNativeView,System.Collections.Generic.IEnumerable&lt;TNativeView&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">To be added.</typeparam>
        <param name="target">To be added.</param>
        <param name="bindingContext">To be added.</param>
        <param name="getChild">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetValue&lt;TNativeView&gt; (TNativeView target, Xamarin.Forms.BindableProperty targetProperty, object value) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue&lt;class TNativeView&gt;(!!TNativeView target, class Xamarin.Forms.BindableProperty targetProperty, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="targetProperty" Type="Xamarin.Forms.BindableProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">To be added.</typeparam>
        <param name="target">To be added.</param>
        <param name="targetProperty">To be added.</param>
        <param name="value">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferBindablePropertiesToWrapper&lt;TNativeView,TNativeWrapper&gt;">
      <MemberSignature Language="C#" Value="public static void TransferBindablePropertiesToWrapper&lt;TNativeView,TNativeWrapper&gt; (TNativeView nativeView, TNativeWrapper wrapper) where TNativeView : class where TNativeWrapper : Xamarin.Forms.View;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransferBindablePropertiesToWrapper&lt;class TNativeView, (class Xamarin.Forms.View) TNativeWrapper&gt;(!!TNativeView nativeView, !!TNativeWrapper wrapper) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TNativeWrapper">
          <Constraints>
            <BaseTypeName>Xamarin.Forms.View</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="nativeView" Type="TNativeView" />
        <Parameter Name="wrapper" Type="TNativeWrapper" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">To be added.</typeparam>
        <typeparam name="TNativeWrapper">To be added.</typeparam>
        <param name="nativeView">To be added.</param>
        <param name="wrapper">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
