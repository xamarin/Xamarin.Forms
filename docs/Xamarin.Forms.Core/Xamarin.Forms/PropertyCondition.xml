<Type Name="PropertyCondition" FullName="Xamarin.Forms.PropertyCondition">
  <TypeSignature Language="C#" Value="public sealed class PropertyCondition : Xamarin.Forms.Condition, Xamarin.Forms.Xaml.IValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyCondition extends Xamarin.Forms.Condition implements class Xamarin.Forms.Xaml.IValueProvider" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xamarin.Forms.Condition</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.Xaml.IValueProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Xamarin.Forms.Xaml.AcceptEmptyServiceProvider</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class that represents a value comparison against a property on the control that contains the enclosing <see cref="T:Xamarin.Forms.MultiTrigger" />.</summary>
    <remarks>
      <para>The <see cref="T:Xamarin.Forms.PropertyCondition" /> class is suitable for checking property values on the control that contains the <see cref="T:Xamarin.Forms.MultiTrigger" /> that contains it. To check values on other controls, developers can use the <see cref="T:Xamarin.Forms.BindingCondition" /> class, in addition to any property conditions in the trigger list.</para>
      <example>
        <para>The XML example below creates a property condition within a surrounding <see cref="T:Xamarin.Forms.MultiTrigger" /> within a <see cref="T:Xamarin.Forms.TextCell" /> that turns the text green when the secret is typed. The code is turned back to the default color if the user then edits the secret. (Typically, a <see cref="T:Xamarin.Forms.MultiTrigger" /> would have more than one condition; this example is simplified for clarity.)</para>
        <code lang="XML"><![CDATA[
<Entry Placeholder="Type the secret!"
       VerticalOptions="Center"
       HorizontalOptions="Center">
      <Entry.Triggers>
          <MultiTrigger TargetType="Entry" >
              <MultiTrigger.Conditions>
                  <PropertyCondition Property="Text"
                                     Value="The text color is green" />
              </MultiTrigger.Conditions>
              <Setter Property="TextColor"
                  Value="Color.Green" />
          </MultiTrigger>
      </Entry.Triggers>
</Entry>]]></code>
      </example>
    </remarks>
    <altmember cref="T:Xamarin.Forms.MultiTrigger" />
    <altmember cref="T:Xamarin.Forms.BindingCondition" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyCondition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new <see cref="T:Xamarin.Forms.PropertyCondition" /> instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.BindableProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.BindableProperty Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the property against which the <see cref="P:Xamarin.Forms.PropertyCondition.Value" /> property will be compared.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The binding value that satisfies the condition.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.Xaml.IValueProvider.ProvideValue">
      <MemberSignature Language="C#" Value="object IValueProvider.ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Xamarin.Forms.Xaml.IValueProvider.ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">For internal use by the Xamarin.Forms platform.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
