variables:
- name: DefaultBuildPlatform
  value: 'any cpu'
- name: ApkName
  value: AndroidControlGallery.AndroidControlGallery.apk
- name: BuildVersion
  value: $[counter('nuget-counter-1', 2400)]
- name: NUGET_VERSION
  value: 5.8.1
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
  value: true
- name: DOTNET_VERSION
  value: 5.0.102
- name: signingCondition
  value: and(succeeded(), or(eq(variables['Sign'], 'true'), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'],'refs/tags/'))))
- group: Xamarin-Secrets

parameters:
  - name: VM_IMAGE_HOST
    type: object
    default:
      name: AzurePipelines-EO
      image: 1ESPT-Windows2019
      os: windows
  
  - name: PackPlatform
    type: object
    default:
      name: Windows
      artifact: nuget
      binariesArtifact: win_build
      docsArtifact: xml-docs

  - name: Skip1ESComplianceTasks
    default: false

resources:
  repositories:
    - repository: xamarin-templates
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin
      ref: refs/heads/main
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

trigger:
  branches:
    include:
    - main
    - 5.*
  tags:
    include:
    - '*'
  paths:
    exclude:
    - README.md

pr:
  autoCancel: false
  branches:
    include:
    - main
    - 5.*

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - 5.0.0

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool: ${{ parameters.VM_IMAGE_HOST }}
    sdl:
      ${{ if eq('${{ parameters.Skip1ESComplianceTasks }}', 'true') }}:
        enableAllTools: false
      binskim:
        scanOutputDirectoryOnly: true
      codeql:
        runSourceLanguagesInSourceAnalysis: true
      policheck:
        enabled: true
      spotBugs:
        enabled: false
        justification: 'Failing with "Could not successfully find the java tool launcher"'
      sourceRepositoriesToScan:
        exclude:
        - repository: yaml-templates
      suppression:
        suppressionFile: $(Build.SourcesDirectory)\build\automation\guardian\source.gdnsuppress
    stages:
      - stage: windows
        displayName: Build Windows
        jobs:
          - job: win_hosted
            workspace:
              clean: all
            displayName: ${{ parameters.PackPlatform.name }}
            timeoutInMinutes: 60
            
            pool: ${{ parameters.VM_IMAGE_HOST }}

            templateContext:
              outputs:
                - output: pipelineArtifact
                  displayName: 'Publish the ${{ parameters.PackPlatform.binariesArtifact }} artifacts'
                  artifactName: ${{ parameters.PackPlatform.binariesArtifact }}
                  targetPath: '(Build.ArtifactStagingDirectory)'
                
                - output: pipelineArtifact
                  displayName: 'Publish the ${{ parameters.PackPlatform.artifact }} artifacts'
                  artifactName: ${{ parameters.PackPlatform.artifact }}
                  targetPath: '$(System.DefaultWorkingDirectory)/nuget'

                # - output: pipelineArtifact
                #   displayName: 'Publish the ${{ parameters.PackPlatform.docsArtifact }} artifacts'
                #   artifactName: ${{ parameters.PackPlatform.docsArtifact }}
                #   targetPath: '$(System.DefaultWorkingDirectory)/artifacts/docs-packs'
            variables:
              BuildConfiguration: Release
            steps:
              - template: /build/steps/build-windows.yml@self
                parameters:
                  provisionatorPath : 'build/provisioning/provisioning.csx'
                  provisionatorVSPath : 'build/provisioning/vs.csx'
                  runTests: false
                  publishArtifacts: false
                  binariesArtifact: ${{ parameters.PackPlatform.binariesArtifact }}
                  artifact: ${{ parameters.PackPlatform.artifact }}
                  artifactBinaries: ${{ parameters.PackPlatform.binariesArtifact }}
                  artifactsTargetFolder: '(Build.ArtifactStagingDirectory)'
      
          - job: nuget_pack_hosted
            workspace:
              clean: all
            displayName: Nuget Phase
            dependsOn:
            - win_hosted
            condition: succeeded()
            pool: ${{ parameters.VM_IMAGE_HOST }}
            variables:
              FormsIdAppend: ''
              buildConfiguration: Release
              nugetPackageVersion : $[ dependencies.win_hosted.outputs['release.winbuild.xamarinformspackageversion'] ]
            steps:
              - template: /build/steps/build-nuget.yml@self
                parameters:
                  nugetForRelease : true
                  nugetForDebug : false
                  publishArtifacts: false
                  artifact: ${{ parameters.PackPlatform.artifact }}
                  binariesArtifact: ${{ parameters.PackPlatform.binariesArtifact }}

      - stage: nuget_signing
        dependsOn: windows
        displayName: Sign Nuget
        jobs:
          - template: sign-artifacts/jobs/v2.yml@xamarin-templates
            parameters:
              displayName: Sign Phase
              condition: ${{ variables.signingCondition }}
              use1ESTemplate: true
              usePipelineArtifactTasks: true
