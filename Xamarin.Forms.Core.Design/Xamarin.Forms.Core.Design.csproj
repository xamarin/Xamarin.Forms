<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Description>Provides the design-time metadata for the XAML language service.</Description>
    <AssemblyName>Xamarin.Forms.Core.Design</AssemblyName>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{98637471-8E5C-4DDE-89CA-2EAA664FB0EF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>
    </RootNamespace>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
  </PropertyGroup>
  <ItemGroup Condition=" '$(OS)' != 'Unix' ">
    <Reference Include="Microsoft.Windows.Design.Extensibility, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>True</SpecificVersion>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Xaml" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Xamarin.Forms.Design" Version="1.0.26-pre" Condition=" '$(OS)' != 'Unix' " />
  </ItemGroup>
  <ItemGroup Condition=" '$(OS)' != 'Unix' ">
    <Compile Include="AttributeTableBuilder.cs" />
    <Compile Include="EnumConverter.cs" />
    <Compile Include="NonExclusiveEnumConverter.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="RegisterMetadata.cs" />
    <Compile Include="VisualDesignTypeConverter.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Xamarin.Forms.Core\Xamarin.Forms.Core.csproj">
      <Project>{57b8b73d-c3b5-4c42-869e-7b2f17d354ac}</Project>
      <Name>Xamarin.Forms.Core</Name>
      <GenerateDesignMetadata>true</GenerateDesignMetadata>
      <Private>False</Private>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup Condition=" '$(OS)' != 'Unix' ">
  </ItemGroup>
  <!-- The IDE will look for a top level assembly resource called 'Xamarin.Forms.toolbox.xml' to -->
  <!-- load the toolbox metadata from.                                                           -->
  <ItemGroup>
    <EmbeddedResource Include="toolbox\Xamarin.Forms.toolbox.xml">
      <LogicalName>Xamarin.Forms.toolbox.xml</LogicalName>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ItemsLayoutDesignTypeConverter.cs" />
    <Compile Include="KeyboardDesignTypeConverter.cs" />
    <Compile Include="EasingDesignTypeConverter.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- Ensure that all images in the 'mac' and 'win' subdirectories are included as embedded resources -->
  <!-- using a defined format. That format is "{platform}.{imagename}". We will look up images using   -->
  <!-- exact-match logic so there's no guessework to figure out which image we need to load.           -->
  <PropertyGroup>
    <AssignTargetPathsDependsOn>
      $(AssignTargetPathsDependsOn);
      IncludeToolboxImages
    </AssignTargetPathsDependsOn>
  </PropertyGroup>
  <Target Name="IncludeToolboxImages">
    <!-- Be explicit about the prefix rather than relying on the directory name being exactly what we need -->
    <ItemGroup>
      <Images Include="toolbox\icons\mac\*.png">
        <Prefix>mac</Prefix>
      </Images>
      <Images Include="toolbox\icons\win\*.png">
        <Prefix>win</Prefix>
      </Images>
    </ItemGroup>
    <CreateItem Include="@(Images)" AdditionalMetadata="LogicalName=%(Prefix).%(Filename)%(Extension)">
      <Output TaskParameter="Include" ItemName="EmbeddedResource" />
    </CreateItem>
  </Target>
</Project>