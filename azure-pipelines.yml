variables:
- name: DefaultBuildConfiguration
  value: Debug
- name: DefaultBuildPlatform
  value: 'any cpu'
- name: ApkName
  value: AndroidControlGallery.AndroidControlGallery.apk
- name: IpaName
  value: XamarinFormsControlGalleryiOS.ipa
- name: SolutionFile
  value: Xamarin.Forms.sln
- name: BuildVersion
  value: $[counter(variables['Build.SourceBranch'], 1)]
- name: BuildVersion42
  value: $[counter('xf-nuget-counter', 992000)]
- name: BuildVersion43
  value: $[counter('xf-nuget-counter', 992000)]
- name: BuildVersion44
  value: $[counter('xf-nuget-counter', 992000)]
- name: NUGET_VERSION
  value: 5.0.2
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
  value: true
- name: DOTNET_VERSION
  value: 3.0.100

resources:
  repositories:
    - repository: xamarin-templates
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin

trigger:
  branches:
    include:
    - master
    - 3.*
    - 4.*
  tags:
    include:
    - '*'
  paths:
    exclude:
    - README.md

pr:
  autoCancel: false
  branches:
    include:
    - master
    - 4.*
    - 3.*

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master

jobs:
- template: build/steps/build-windows.yml
  parameters:
    name: win
    displayName: Build Windows Phase
    vmImage: $(vs2017VmImage)
    vmPool: $(vs2017VmPool)
    targetFolder: Xamarin.Forms.ControlGallery.Android/legacyRenderers/
    msbuildExtraArguments: '/nowarn:VSX1000 /p:CreateAllAndroidTargets=true'
    buildConfiguration: $(DefaultBuildConfiguration)
    buildPlatform: $(DefaultBuildPlatform)
    provisionatorPath : 'build/provisioning/provisioning.csx'
    includeUwp: 'false'

- template: build/steps/build-windows.yml
  parameters:
    name: win_2019
    displayName: Build UWP Phase
    vmImage: $(vs2019VmImage)
    vmPool: $(vs2019VmPool)
    targetFolder: Xamarin.Forms.ControlGallery.Android/legacyRenderers/
    msbuildExtraArguments: '/nowarn:VSX1000 /p:CreateAllAndroidTargets=true'
    buildConfiguration: $(DefaultBuildConfiguration)
    buildPlatform: $(DefaultBuildPlatform)
    provisionatorPath : 'build/provisioning/provisioning.csx'
    slnPath: '.Xamarin.Forms.UAP.nuget.sln'
    includeNonUwp: 'false'


- template: build/steps/build-android.yml
  parameters:
    name: android_legacy
    displayName: Build Android [Legacy Renderers]
    vmImage: $(macOSXVmImage)
    targetFolder: Xamarin.Forms.ControlGallery.Android/legacyRenderers/
    androidProjectArguments: '/t:"Rebuild;SignAndroidPackage" /bl:$(Build.ArtifactStagingDirectory)/android-legacy.binlog'
    buildConfiguration: $(DefaultBuildConfiguration)
    provisionatorPath : 'build/provisioning/provisioning.csx'

- template: build/steps/build-android.yml
  parameters:
    name: android_preappcompact
    displayName: Build Android [Pre-AppCompat]
    vmImage: $(macOSXVmImage)
    targetFolder: Xamarin.Forms.ControlGallery.Android/preAppCompat
    androidProjectArguments: '/t:"Rebuild;SignAndroidPackage" /p:DefineConstants="TRACE DEBUG FORMS_APPLICATION_ACTIVITY APP" /bl:$(Build.ArtifactStagingDirectory)/android-preappcompact.binlog'
    buildConfiguration: $(DefaultBuildConfiguration)
    provisionatorPath : 'build/provisioning/provisioning.csx'

- template: build/steps/build-android.yml
  parameters:
    name: android_fast
    displayName: Build Android [Fast Renderers]
    vmImage: $(macOSXVmImage)
    targetFolder: Xamarin.Forms.ControlGallery.Android/newRenderers/
    androidProjectArguments: '/t:"Rebuild;SignAndroidPackage" /p:DefineConstants="TRACE DEBUG TEST_EXPERIMENTAL_RENDERERS APP" /bl:$(Build.ArtifactStagingDirectory)/android-newrenderers.binlog'
    buildConfiguration: $(DefaultBuildConfiguration)
    provisionatorPath : 'build/provisioning/provisioning.csx'

- job: osx
  workspace:
    clean: all
  displayName: OSX Phase
  pool:
    vmImage: $(macOSXVmImage)
    demands:
      - sh
      - msbuild
      - Xamarin.iOS
  variables:
    provisionator.osxPath : 'build/provisioning/provisioning.csx'
    provisionator.signPath : 'build/provisioning/provisioning_sign.csx'
    buildConfiguration: $(DefaultBuildConfiguration)
    slnPath: $(SolutionFile)
    iOSCertSecureFileName: 'Xamarin Forms iOS Certificate.p12'
    iOSProvisioningSecureFileName: 'Xamarin Forms iOS Provisioning.mobileprovision'
    monoVersion : $(MONO_VERSION)
  steps:
     - template: build/steps/build-osx.yml

- job: nuget_pack
  workspace:
    clean: all
  displayName: Nuget Phase
  dependsOn:
   - win
   - win_2019
  condition: succeeded()
  pool:
    name: $(vs2019VmPool)
    vmImage: $(vs2019VmImage)
  variables:
    FormsIdAppend: ''
    buildConfiguration: $(DefaultBuildConfiguration)
    nugetPackageVersion : $[ dependencies.win.outputs['debug.winbuild.xamarinformspackageversion'] ]
  steps:
     - template: build/steps/build-nuget.yml

  # only sign using the private server
- ${{ if eq(variables['System.TeamProject'], 'devdiv') }}:
  - job: nuget_sign
    displayName: Sign Phase
    dependsOn: nuget_pack
    pool:
      name: $(signVmPool)
    steps:
      - template: build/steps/build-sign.yml
    condition: and(succeeded(), or(eq(variables['Sign'], 'true'), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'],'refs/tags/'))))



